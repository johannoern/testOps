{
    "type":"object",
    "title": "testOps inputs",
    "required": ["provider", "function_name", "project_path", "main_class", "name", "gcp_project"],
    "properties":{
        "provider":{
            "type":"array",
            "items": {
                "type": "string",
                "enum": ["aws", "gcp"]
              }
        },
        "function_name":{
            "type":"string",
            "description":"name of the function, this name will also be used for the deployed function",
            "example": "main"
        },
        "project_path":{
            "type":"string",
            "description":"path to the root directory of the project with the function",
            "example": "C:/Users/User/Documents/ServerlessProject"
        },
        "main_class":{
            "type":"string",
            "description":"file containing the function/method to be deployed",
            "example": "C:/Users/User/Documents/ServerlessProject/src/main/java/org/example/ServerlessFunction.java"      
        },
        "name":{
            "type":"string",
            "pattern":"[a-zA-Z][-a-zA-Z0-9]*",
            "description":"name will be used to create the Stack for AWS Lambda Power Tuning"  
        },

        "gcp_project":{
            "type":"string",
            "description": "gcp project necessary if working with gcp"
        },

        "$comment": "from here on properties are not required will either be generated by testOps or have a default",
        "old_analyser":{
            "type":"boolean",
            "description":"Can be set to true if old_analyser is going to be used. The function will then be deployed separatelly for each memory config, following the needed naming convention.",
            "default": false
        },
        "aws_region":{
            "type": "string",
            "default": "us-east-1"
        },
        "powertuner_setup":{
            "type":"boolean",
            "description":"if set to True testOps assumes the setup is ready and does not clone the repo and build up the cloud formation",
            "default": false
        },
        "memory_configurations":{
            "type":"array",
            "default": [128,256],
            "items": {
              "type": "integer",
              "enum": [128, 256, 512]
            }
        },
        "terraform_dir":{
            "type":"string",
            "description":"directory which will be used for terraform - When using testOps for multiple projects this variable has to be used",
            "default":"./terraform" 
        },
        "stack_name":{
            "$comment": "this property can be generated by testOps",
            "type":"string",
            "description": "if not supplied it will be filled using name. Used for the samconfig to built the aws lambda power tuning state machine"
        },
        "s3_prefix":{
            "$comment": "this property can be generated by testOps",
            "type":"string",
            "description": "same as stack name, prefixes the s3buckets created when setting up aws lambda power tuning"
        },

        "aws_code":{
            "$comment": "this property can be generated by testOps",
            "type":"string",
            "description":"Automatically set after build with testOps. Used to store the location of the build for deployment",
            "example":"C:/Users/User/Documents/ServerlessProject/build/libs/eldgos-1.0-SNAPSHOT.jar"
        }, 
        "aws_handler":{
            "$comment": "this property can be generated by testOps",
            "type":"string",
            "description":"Handler built for the Main_class - can also be the main class itself if the Handler was manually implemented",
            "example":"org.example.AWSRequestHandler"
        },
        "gcp_handler":{
            "$comment": "this property can be generated by testOps",
            "type":"string",
            "description":"if generated by testops the aws and gcp handlers are implemented in the same class",
            "example":"org.example.AWSRequestHandler"
        },
        "lambdaARN":{
            "$comment": "this property can be generated by testOps",
            "type":"string",
            "description":"Automatically set after deploy with testOps. Location of function that will be analysed.",
            "example": "arn:aws:lambda:us-east-1:650940819061:function:handleRequest"
        }

    }
}