########### Lambda ###########

variable "amazon" {
  type = object({
    function_src = string
    region      = string
    functions   = list(
      object({
        function_name = string,
        memory        = number,
        handler       = string,
        timeout       = number
      }))
  })
} 

resource "aws_iam_role" "iam_for_lambda"{
  name = "iam_for_lambda_${var.project_name}"
  assume_role_policy = <<EOF
  {
 "Version": "2012-10-17",
 "Statement": [
   {
     "Action": "sts:AssumeRole",
     "Principal": {
       "Service": "lambda.amazonaws.com"
     },
     "Effect": "Allow",
     "Sid": ""
   }
 ]
}
EOF
}

resource "aws_s3_bucket" "testops_src_bucket" {
  bucket = "baas-jfops-bucket"
}

resource "aws_s3_object" "object" {
  depends_on = [ aws_s3_bucket.testops_src_bucket ]  
  bucket = "baas-jfops-bucket"
  key    = "eldgos-1.0-SNAPSHOT.jar"
  source = var.amazon.function_src
  source_hash = filemd5(var.amazon.function_src)
}

resource "aws_lambda_function" "test_subject" {
  depends_on = [ aws_s3_object.object ]  
  for_each = {for func in var.amazon.functions : func.function_name => func}


  s3_bucket        = aws_s3_bucket.testops_src_bucket.bucket
  s3_key           = "eldgos-1.0-SNAPSHOT.jar"
  function_name    = each.value.function_name
  role             = aws_iam_role.iam_for_lambda.arn
  handler          = each.value.handler
  memory_size      = each.value.memory
  timeout          = each.value.timeout
  source_code_hash = filebase64sha256(var.amazon.function_src)

  runtime = "java11"
}

resource "aws_lambda_function" "no_op_function"{
  function_name = "testOps_no_op_function"
  role          = aws_iam_role.iam_for_lambda.arn
  handler       = "lambda_function.lambda_handler"
  memory_size   = 256
  timeout = 3
  filename = "../Baas/templates/testOps_no_op.zip"
  source_code_hash = filebase64sha256("../Baas/templates/testOps_no_op.zip")
  runtime       = "python3.9"
}

output "lambda_arns" {
  value = {for func in var.amazon.functions : func.function_name => aws_lambda_function.test_subject[func.function_name].arn}
}